Class("Dock",
        Description("the dock module of deepin webkit"),
        Function("test", Null(), String("123")),

        Function("emit_webview_ok", Null()),
        Function("show_desktop", Null(), Boolean("ShowOrHiden", "show or hiden then desktop")),
        Function("active_window", Null(), Number("ID", "The ID of the window which will be actived")),
        Function("get_active_window", Number("ID", "The ID of the active window")),
        Function("iconify_window", Null(), Number("ID", "The ID of the window which will be minimal")),
        Function("is_client_minimized", Boolean("MinimizedOrNot", "whether the client window is minmized"), Number("ID", "The ID of the window which will be minimal")),
        Function("window_need_to_be_minimized",
                 Boolean("NeedToBeMinimizedOrNot", "if the client window need to be minimized"), Number("ID", "The ID of the active window")),
        Function("close_window", Number("Status", "The status of closing window "), Number("ID", "The ID of the window which will be closed")),

        Function("draw_window_preview", Null(),
            JSValueRef("canvas", "The canvas element"),
            Number("ID", "The ID of the window which will be fetch preview image"),
            Number("width", "The width will be hope"),
            Number("height", "The height will be hope")
        ),
        Function("set_compiz_workaround_preview", Null(),
            Boolean("v", "open or close")
        ),
        Function("draw_board", Null(),
            JSValueRef("canvas", "The canvas element")
        ),

        Function("force_set_region", Null(),
            Number("x", ""),
            Number("y", ""),
            Number("width", ""),
            Number("number", ""),
            Number("height", "")
        ),
        Function("require_all_region", Null()),
        Function("require_region", Null(),
            Number("x", ""),
            Number("y", ""),
            Number("width", ""),
            Number("height", "")
        ),
        Function("release_region", Null(),
            Number("x", ""),
            Number("y", ""),
            Number("width", ""),
            Number("height", "")
        ),
        Function("set_region_origin", Null(),
            Number("x", ""),
            Number("y", ""),
        ),

        Signal("task_add", "{}"),
        Signal("task_remove", "{}"),
        Signal("active_change", "{}"),
        Signal("task_add", "{}"),
        Signal("show_desktop", "{}"),

        Function("get_launcher_info", JSValueRef(),
            String("name", "the executable file name")
        ),
        Function("has_launcher", Boolean(),
            String("id", "the app info id")
        ),
        Function("swap_apps_position", Null(),
            String("id1", ""),
            String("id2", "")
        ),
        Function("insert_apps_position", Null(),
            String("id1", ""),
            String("id_anchor", "")
        ),
        Function("request_dock", Null(),
            String("path", "the desktop file path")
        ),
        Function("request_dock_by_client_id", Boolean(),
            Number("id")
        ),
        Function("request_undock", Null(),
            String("id", "the app info id")
        ),
        Function("launch_by_app_id", Boolean(),
            String("id", "the app info id"),
            String("e", "the optinal exec string"),
            AObject("fs")
        ),
        Function("change_workarea_height", Null(),
            Number("h", "the height of dock want")
        ),
        Function("toggle_launcher", Null(),
            Boolean("v", "run or close the launcher program"),
        ),
        Function("get_desktop_status", Boolean()),
        Function("update_hide_mode", Null()),
        Function("launch_from_commandline", Null(),
                 CString("appid", "appid of app"),
                 CString("cmdline", "the command line of app")
                ),
        Function("update_guard_window_width",
                 Null(),
                 Number("width", "thewidth of dock")
                 ),
        Function("clock_type", String("type", "clock type, digit or analog")),
        Function("set_clock_type",
                 Null(),
                 CString("type", "clock type, digit or analog")
                 ),
     )
